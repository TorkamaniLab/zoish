
FROM ubuntu:20.04
RUN useradd -ms /bin/sh admin
COPY --chown=admin:admin . /zoish
WORKDIR /zoish
ENV PYTHON_VERSION=3.10
ENV POETRY_VERSION=1.4.2


#Set of all dependencies needed for pyenv to work on Ubuntu
RUN apt-get update
RUN apt-get install -y --no-install-recommends         make 
RUN apt-get install -y --no-install-recommends        build-essential 
RUN apt-get install -y --no-install-recommends        libssl-dev 
RUN apt-get install -y --no-install-recommends         bzip2 
RUN apt-get install -y --no-install-recommends         openssl 
RUN apt-get install -y --no-install-recommends         zlib1g-dev 
RUN apt-get install -y --no-install-recommends         libbz2-dev 
RUN apt-get install -y --no-install-recommends         libreadline-dev 
RUN apt-get install -y --no-install-recommends         libsqlite3-dev 
RUN apt-get install -y --no-install-recommends         wget 
RUN apt-get install -y --no-install-recommends         ca-certificates 
RUN apt-get install -y --no-install-recommends         curl 
RUN apt-get install -y --no-install-recommends         llvm 
RUN apt-get install -y --no-install-recommends         libncurses5-dev 
RUN apt-get install -y --no-install-recommends         libncursesw5-dev 
RUN apt-get install -y --no-install-recommends         xz-utils 
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata
RUN apt-get install -y --no-install-recommends         libxml2-dev 
RUN apt-get install -y --no-install-recommends         libxmlsec1-dev 
RUN apt-get install -y --no-install-recommends         libffi-dev 
RUN apt-get install -y --no-install-recommends         liblzma-dev 
RUN apt-get install -y --no-install-recommends         mecab-ipadic-utf8 
RUN apt-get install -y --no-install-recommends         git 
RUN apt-get install -y --no-install-recommends         gnumeric 

# Set-up necessary Env vars for PyEnv
ENV PYENV_ROOT /root/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

# Install pyenv
RUN set -ex \
    && curl https://pyenv.run | bash \
    && pyenv update \
    && pyenv install $PYTHON_VERSION \
    && pyenv global $PYTHON_VERSION \
    && pyenv rehash

# RUN apt install python3-pytest
RUN apt-get -y install nox
WORKDIR /zoish/zoish/data
RUN curl -O -k 'https://archive.ics.uci.edu/ml/machine-learning-databases/00350/default%20of%20credit%20card%20clients.xls' 
RUN  ssconvert default%20of%20credit%20card%20clients.xls data1.csv 
RUN  grep -v "X1" data1.csv > data.csv

# Install and setup poetry
WORKDIR /zoish
RUN pip3 install --upgrade pip
RUN pip install "poetry==$POETRY_VERSION"
RUN poetry config virtualenvs.create false 
RUN poetry cache clear --all pypi 
RUN poetry install  --no-interaction --no-ansi

USER admin
RUN chmod +x ./run.sh

CMD ["bash", "./run.sh"]
