
FROM python:3.7.6-alpine3.11 as base

ENV PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1

WORKDIR /zoish

FROM base as builder

ENV PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    POETRY_VERSION=1.1.13

RUN apk add --no-cache gcc libffi-dev musl-dev postgresql-dev
RUN pip install "poetry==$POETRY_VERSION"
RUN python -m venv /venv

COPY pyproject.toml poetry.lock ./
RUN poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi

COPY . .
# RUN poetry build && /venv/bin/pip install dist/*.whl

FROM base as final

RUN apk add --no-cache libffi libpq
# COPY --from=builder /venv /venv
COPY entrypoint.sh  ./
CMD ["./entrypoint.sh"]

# FROM python
# RUN useradd -ms /bin/sh admin
# COPY --chown=admin:admin . /zoish
# WORKDIR /zoish
# ENV -u username
# ENV -p password
# ENV PYTHONPATH="${PYTHONPATH}:."
# RUN pip install --upgrade build
# RUN ls -a
# RUN echo $PYTHONPATH
# RUN echo $PATH
# RUN python -m build
# RUN pip install twine

# ENTRYPOINT ["twine"]

# RUN twine upload dist/* -u=$username -p=$password
