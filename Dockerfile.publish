
FROM python:3.9-slim as base

ENV PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1 \
    username=$username \
    password=$password 


RUN apt-get update && apt-get install -y gcc libffi-dev g++
WORKDIR /zoish

FROM base as builder

ENV PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    POETRY_VERSION=1.1.13

RUN pip install "poetry==$POETRY_VERSION"
RUN python -m venv /venv

COPY pyproject.toml poetry.lock ./
RUN . /venv/bin/activate && poetry install --no-dev --no-root

COPY . .
RUN . /venv/bin/activate && poetry build

FROM base as final

COPY --from=builder /venv /venv
COPY --from=builder /zoish/dist .
COPY docker-entrypoint.sh ./

RUN . /venv/bin/activate && pip install *.whl
RUN chmod +x ./docker-entrypoint.sh
ENTRYPOINT ["./docker-entrypoint.sh"]


# FROM python
# RUN useradd -ms /bin/sh admin
# COPY --chown=admin:admin . /zoish
# WORKDIR /zoish
# ENV -u username
# ENV -p password
# ENV PYTHONPATH="${PYTHONPATH}:."
# RUN pip install --upgrade build
# RUN ls -a
# RUN echo $PYTHONPATH
# RUN echo $PATH
# RUN python -m build
# RUN pip install twine

# ENTRYPOINT ["twine"]

# RUN twine upload dist/* -u=$username -p=$password
